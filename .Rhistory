}
}
pay_info <- html_node(book_html, '.payment_box.curr')
ps <- html_nodes(pay_info, 'p')
price <- ps[2] %>%
html_node('.pbr') %>%
html_node('strong') %>%
html_text()
price <- as.integer(gsub(',','',price))
title_vector <- c(title_vector, title)
writer_vector <- c(writer_vector, writer)
page_vector <- c(page_vector, page)
price_vector <- c(price_vector, price)
}
}
new_books <- data.frame(
title=title_vector,
writer=writer_vector,
page=page_vector,
price=price_vector
)
title_vector <- c()
writer_vector <- c()
page_vector <- c()
price_vector <- c()
for (i in 1:25) {
page_url <- paste0('page=%d&cate_cd=&srt=&searchKey=&keyWord=', i)
print(page_url)
for (li in lis) {
info <- html_node(li, '.info')
title <- info %>%
html_node('.book_tit') %>%
html_text()
writer <- info %>%
html_node('.book_writer') %>%
html_text()
href <- li %>%
html_node('.info') %>%
html_node('a') %>%
html_attr('href')
book_url <- paste0(base_url, substr, page_url)      #  paste(base_url, href, sep = '/')을 써도 되긴 됨(url이 이상한데 이상하게 접속하는덴 문제가 없더라고)
book_html <- read_html(book_url)
info_list <- html_node(book_html, 'ul.info_list')
book_lis <- html_nodes(info_list, 'li')
for (book_li in book_lis) {
item <- book_li %>%
html_node('strong') %>%
html_text()
if (substring(item, 1, 3) == '페이지') {
page <- book_li %>%
html_node('span') %>%
html_text()
len <- str_length(page)
page <- as.integer(substring(page, 1, len-2))
break
}
}
pay_info <- html_node(book_html, '.payment_box.curr')
ps <- html_nodes(pay_info, 'p')
price <- ps[2] %>%
html_node('.pbr') %>%
html_node('strong') %>%
html_text()
price <- as.integer(gsub(',','',price))
title_vector <- c(title_vector, title)
writer_vector <- c(writer_vector, writer)
page_vector <- c(page_vector, page)
price_vector <- c(price_vector, price)
}
}
new_books <- data.frame(
title=title_vector,
writer=writer_vector,
page=page_vector,
price=price_vector
)
title_vector <- c()
writer_vector <- c()
page_vector <- c()
price_vector <- c()
for (i in 1:25) {
page_url <- paste0('page=%d&cate_cd=&srt=&searchKey=&keyWord=', i)
print(page_url)
for (li in lis) {
info <- html_node(li, '.info')
title <- info %>%
html_node('.book_tit') %>%
html_text()
writer <- info %>%
html_node('.book_writer') %>%
html_text()
href <- li %>%
html_node('.info') %>%
html_node('a') %>%
html_attr('href')
book_url <- paste0(base_url, substr, page_url)      #  paste(base_url, href, sep = '/')을 써도 되긴 됨(url이 이상한데 이상하게 접속하는덴 문제가 없더라고)
book_html <- read_html(book_url)
info_list <- html_node(book_html, 'ul.info_list')
book_lis <- html_nodes(info_list, 'li')
for (book_li in book_lis) {
item <- book_li %>%
html_node('strong') %>%
html_text()
if (substring(item, 1, 3) == '페이지') {
page <- book_li %>%
html_node('span') %>%
html_text()
len <- str_length(page)
page <- as.integer(substring(page, 1, len-2))
break
}
}
pay_info <- html_node(book_html, '.payment_box.curr')
ps <- html_nodes(pay_info, 'p')
price <- ps[2] %>%
html_node('.pbr') %>%
html_node('strong') %>%
html_text()
price <- as.integer(gsub(',','',price))
title_vector <- c(title_vector, title)
writer_vector <- c(writer_vector, writer)
page_vector <- c(page_vector, page)
price_vector <- c(price_vector, price)
}
}
new_books <- data.frame(
title=title_vector,
writer=writer_vector,
page=page_vector,
price=price_vector
)
for (i in 1:25) {
page_url <- paste0('page=%s&cate_cd=&srt=&searchKey=&keyWord=', i)
print(page_url)
for (li in lis) {
info <- html_node(li, '.info')
title <- info %>%
html_node('.book_tit') %>%
html_text()
writer <- info %>%
html_node('.book_writer') %>%
html_text()
href <- li %>%
html_node('.info') %>%
html_node('a') %>%
html_attr('href')
book_url <- paste0(base_url, substr, page_url)      #  paste(base_url, href, sep = '/')을 써도 되긴 됨(url이 이상한데 이상하게 접속하는덴 문제가 없더라고)
book_html <- read_html(book_url)
info_list <- html_node(book_html, 'ul.info_list')
book_lis <- html_nodes(info_list, 'li')
for (book_li in book_lis) {
item <- book_li %>%
html_node('strong') %>%
html_text()
if (substring(item, 1, 3) == '페이지') {
page <- book_li %>%
html_node('span') %>%
html_text()
len <- str_length(page)
page <- as.integer(substring(page, 1, len-2))
break
}
}
pay_info <- html_node(book_html, '.payment_box.curr')
ps <- html_nodes(pay_info, 'p')
price <- ps[2] %>%
html_node('.pbr') %>%
html_node('strong') %>%
html_text()
price <- as.integer(gsub(',','',price))
title_vector <- c(title_vector, title)
writer_vector <- c(writer_vector, writer)
page_vector <- c(page_vector, page)
price_vector <- c(price_vector, price)
}
}
page_url <- paste0('page=%s&cate_cd=&drt=&searchKey=&keyWord=', i)
for (i in c(1:25)) {
page_url <- paste0('page=%s&cate_cd=&drt=&searchKey=&keyWord=', i)
print(page_url)
for (li in lis) {
info <- html_node(li, '.info')
title <- info %>%
html_node('.book_tit') %>%
html_text()
writer <- info %>%
html_node('.book_writer') %>%
html_text()
href <- li %>%
html_node('.info') %>%
html_node('a') %>%
html_attr('href')
book_url <- paste0(base_url, substr, page_url)      #  paste(base_url, href, sep = '/')을 써도 되긴 됨(url이 이상한데 이상하게 접속하는덴 문제가 없더라고)
book_html <- read_html(book_url)
info_list <- html_node(book_html, 'ul.info_list')
book_lis <- html_nodes(info_list, 'li')
for (book_li in book_lis) {
item <- book_li %>%
html_node('strong') %>%
html_text()
if (substring(item, 1, 3) == '페이지') {
page <- book_li %>%
html_node('span') %>%
html_text()
len <- str_length(page)
page <- as.integer(substring(page, 1, len-2))
break
}
}
pay_info <- html_node(book_html, '.payment_box.curr')
ps <- html_nodes(pay_info, 'p')
price <- ps[2] %>%
html_node('.pbr') %>%
html_node('strong') %>%
html_text()
price <- as.integer(gsub(',','',price))
title_vector <- c(title_vector, title)
writer_vector <- c(writer_vector, writer)
page_vector <- c(page_vector, page)
price_vector <- c(price_vector, price)
}
}
page_url <- paste0('?page =', 1)
info <- html_node(li, '.info')
title <- info %>%
html_node('.book_tit') %>%
html_text()
writer <- info %>%
html_node('.book_writer') %>%
html_text()
href <- li %>%
html_node('.info') %>%
html_node('a') %>%
html_attr('href')
book_url <- paste0(base_url, href, page_url)
book_html <- read_html(book_url)
book_html
book_url
book_url <- paste0(base_url, substr(href, 1, 17), page_url)
book_url
book_url <- paste0(base_url, substr(href, 1, 16), page_url)
book_url
href <- li %>%
html_node('.info') %>%
html_node('a') %>%
html_attr('href')
href
# 웹 사이트 읽기
base_url <- 'https://www.hanbit.co.kr/media/books'
page_url <- paste0('?page =', 1)
info <- html_node(li, '.info')
title <- info %>%
html_node('.book_tit') %>%
html_text()
writer <- info %>%
html_node('.book_writer') %>%
html_text()
href <- li %>%
html_node('.info') %>%
html_node('a') %>%
html_attr('href')
book_url <- paste0(base_url, substr(href, 1, 16), page_url)
book_url
book_html <- read_html(book_url)
book_html
book_url
# 웹 사이트 읽기
base_url <- 'https://www.hanbit.co.kr/media/books/'
tr
# 2. 지니뮤직 일간차트 1~100위 Rank, Last Rank, Title, Artist, Album
library(rvest)
library(stringr)
library(dplyr)
library(httr)
url <- 'https://www.genie.co.kr/chart/top200?ditc=D&rtm=N'
ua <- 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
res <- GET(url=url, user_agent(agent=ua))
html <- read_html(res)
table <- html %>%
html_node('table.list-wrap')
trs <- table %>%
html_node('tbody') %>%
html_nodes('tr')
len <- length(trs)
tr
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
tr
tr <- trs[23]
tr
url <- 'https://www.genie.co.kr/chart/top200?ditc=D&rtm=N'
ua <- 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
res <- GET(url=url, user_agent(agent=ua))
html <- read_html(res)
table <- html %>%
html_node('table.list-wrap')
trs <- table %>%
html_node('tbody') %>%
html_nodes('tr')
len <- length(trs)
tr <- trs[23]
tr
num <- html_node(tr, '.number') %>% html_text()
num
nums <- unlist(str_split(num, '\r\n'))
nums
nums <- unlist(str_split(num, '\r\n'))
nums
nums <- unlist(str_split(num, '\n'))
nums
table <- html %>%
html_node('table.list-wrap')
trs <- table %>%
html_node('tbody') %>%
html_nodes('tr')
len <- length(trs)
tr <- trs[23]
tr
num <- html_node(tr, '.number') %>% html_text()
num
nums <- unlist(str_split(num, '\n'))
nums
for (i in 1:50){
target <- rank[[i]] %>% gsub("^\\s+|\\s+$|\n| ","",.)
stat <- substr(target, (nchar(target)-1), nchar(target))
print(stat)
}
source('C:/workspace/R/0510 크롤링/문제 풀다가 빢침.R', encoding = 'UTF-8', echo=TRUE)
# 2. 지니뮤직 일간차트 1~100위 Rank, Last Rank, Title, Artist, Album
library(rvest)
library(stringr)
library(dplyr)
library(httr)
url <- 'https://www.genie.co.kr/chart/top200?ditc=D&rtm=N'
ua <- 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
res <- GET(url=url, user_agent(agent=ua))
html <- read_html(res)
table <- html %>%
html_node('table.list-wrap')
trs <- table %>%
html_node('tbody') %>%
html_nodes('tr')
len <- length(trs)
target = rank %>% gsub("^\\s+|\\s+$|\n| ","",.)
target
substr(target, nchar(target)-1, nchar(target))
typeof(nchar(target))
tr <- trs[1]
rank <- trs %>%
html_node('td.number') %>%
html_text()
##################################################################
for (i in 1:50){
target <- rank[[i]] %>% gsub("^\\s+|\\s+$|\n| ","",.)
stat <- substr(target, (nchar(target)-1), nchar(target))
print(stat)
}
##################################################################
for (i in 1:50){
target <- rank[[i]] %>% gsub("^\\s+|\\s+$|\n| ","",.)
if ((i >= 1) & (i <= 9)) {
stat <- substr(target, (nchar(target)-i), nchar(target))
if (!(stat %in% c('유지','ew'))) {
current_rank <- substr(target, 1, 1)
diff <- substr(target %>% gsub(stat,'',.), 2, 3)
} else if (stat == '유지') {
current_rank = substr(target, 1, 1)
diff = 0
}
}
}
html <- read.html(url)
library(rvest)
library(stringr)
library(dplyr)
library(httr)
html <- read.html(url)
html <- read_html(url)
library(rvest)
library(stringr)
library(dplyr)
library(httr)
url <- 'https://www.siksinhot.com/search?keywords=%ED%95%9C%EB%82%A8%EB%8C%80'
html <- read_html(url)
cont <- html %>%
html_node('.listTy1') %>%
html_node('.cont') %>%
html_node('.cnt')
cont <- html %>%
html_node('.listTy1') %>%
html_node('.cont') %>%
html_node('.cnt')
title <- (cont, '.store')
title <- html_nodes(cont, '.store')
title
title <- html_nodes(cont, '.store') %>% html_text()
title
cont <- html %>%
html_node('.listTy1') %>%
html_nodes('.cont') %>%
html_nodes('.cnt')
title <- html_nodes(cont, '.store') %>% html_text()
title
cont <- html %>%
html_node('.listTy1') %>%
html_nodes('.cont')
title <- html_nodes(cont, '.store') %>% html_text()
title
herf <- cont %>%
html_nodes('a')
herf
herf <- cont %>%
html_nodes('a') %>% text()
herf <- cont %>%
html_nodes('a') %>% html_text()
herf
herf <- cont %>%
html_nodes('a') %>% html('herf')
herf <- cont %>%
html_nodes('a') %>% html_nodes('herf')
herf
herf <- cont %>%
html_nodes('a') %>% html_nodes('.herf')
herf
herf <- cont %>%
html_nodes('a') %>% html_attrs('.herf')
herf
herf <- cont %>%
html_nodes('a') %>% html_attrs('herf')
herf <- cont %>%
html_nodes('a') %>% html_attrs('herf')
herf
herf <- cont %>%
html_nodes('a') %>% html_attr('herf')
herf
herf <- cont %>%
html_nodes('a') %>% html_attr('herf')
herf
herf <- cont %>%
html_node('a') %>% html_attr('herf')
herf
herf <- html %>% html_node('.listTy1') %>% html_node('.cont') %>%
html_node('a') %>% html_attr('herf')
herf
herf <- cont %>%
html_nodes('a') %>% html_attr('herf')
herf
cont <- html %>%
html_node('div.listTy1') %>%
html_nodes('.cont')
herf <- cont %>%
html_nodes('a') %>% html_attr('herf')
herf
title <- html_nodes(cont, '.store') %>% html_text()
title
herf <- cont %>%
html_nodes('a') %>% html_attr('herf')
herf
lis <- html_nodes(cont, 'li')
lis[1]
lis <- html_nodes(html, 'li')
lis[1]
ty1 <- html %>%
html_node('div.listTy1')
cont <- ty1 %>%
html_nodes('.cont')
title <- html_nodes(cont, '.store') %>% html_text()
title
lis <- html_nodes(ty1, 'li')
lis[1]
li <- lis[1]
href <- li %>%
html_node('.cont') %>%
html_node('a') %>%
html_attr('href')
href
href <- html_node('.cont') %>%
html_node('a') %>%
html_attr('href')
base_url <- 'https://www.siksinhot.com/'
store <- html_nodes(cont, '.store') %>% html_text()
store
store <- cont %>% html_node('.store') %>% html_text
store_url <- paste0(base_url, href)
sotre_url
store_url <- paste0(base_url, href)
store_url
base_url <- 'https://www.siksinhot.com'
store_url <- paste0(base_url, href)
store_url
store_info <- store_html %>% html_node('.store_info')
li
tel <- store_html %>% html_node('.p_tel')
lis <- html_nodes(ty1, 'li')
li <- lis[1]
href <- li %>%
html_node('.cont') %>%
html_node('a') %>%
html_attr('href')
store_url <- paste0(base_url, href)
store_html <- read_html(store_url)
tel <- store_html %>% html_node('.p_tel')
tel
tel <- store_html %>% html_node('.p_tel') %>% html_node('p') %>% html_text()
tel
intro <- store_html %>% html_attr('articleBody')
intro
intro <- store_html %>% html_node('.articleBody')
intro
intro <- store_html %>% html_node('articleBody')
intro
intro <- store_html %>% html_attr('articleBody')
intro
