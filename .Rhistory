arrange(desc(avg_cty)) %>%
head(5) %>%
ggplot(aes(reorder(manufacturer, -avg_cty), avg_cty, fill = manufacturer))+
geom_bar(stat = 'identity')
scale_x_continuous(breaks=seq(5, 20, 2))
midwest %>%
filter(poptotal <= 500000, popasian <= 10000) %>%
ggplot(aes(poptotal, popasian, col = state)) +
geom_point(position='jitter')
mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(avg_cty = mean(cty)) %>%
arrange(desc(avg_cty)) %>%
head(5) %>%
ggplot(aes(reorder(manufacturer, -avg_cty), avg_cty, fill = manufacturer))+
geom_bar(stat = 'identity') + coord_cartesian(xlim = c(60, 80), ylim = c(2:4))
mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(avg_cty = mean(cty)) %>%
arrange(desc(avg_cty)) %>%
head(5) %>%
ggplot(aes(reorder(manufacturer, -avg_cty), avg_cty, fill = manufacturer))+
geom_bar(stat = 'identity') + coord_cartesian(xlim = c(1), ylim = c(1:20))
mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(avg_cty = mean(cty)) %>%
arrange(desc(avg_cty)) %>%
head(5) %>%
ggplot(aes(reorder(manufacturer, -avg_cty), avg_cty, fill = manufacturer))+
geom_bar(stat = 'identity') + coord_cartesian( , ylim = c(1:20))
mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(avg_cty = mean(cty)) %>%
arrange(desc(avg_cty)) %>%
head(5) %>%
ggplot(aes(reorder(manufacturer, -avg_cty), avg_cty, fill = manufacturer))+
geom_bar(stat = 'identity')
1* (-1)
(-12) * (-12)
head(dalton)
head(Dalton)
Dalton
install.packages("Galton")
install.packages(UsingR)
install.packages("UsingR")
library(UsingR)
data("galton")
str(galton)
glimpse(galton)
library(dplyr)
library(ggplot2)data("galton")
library(ggplot2)
glimplse(galton)
glimpse(galton)
m <- lm(child~parent, data = galton)
coef(car_model)
coef(m)
summary(m)
plot(galton)
m <- lm(parent~child, data = galton)
abline(m, col = "purple")
abline(m, col = "purple", lwd = 1)
abline(m, col = "purple", lwd = 3)
summary(m)
par(mfrow = c(2, 2))
plot(m)
coef(m)
summary(m)
# par(mfrow = c(2, 2))
plot(m)
# par(mfrow = c(2, 2))
plot(m)
fitted(m)
mse_m <- sum((Y - fitted(m))**2) / length(Y)
mse_m <- sum((parent - fitted(m))**2) / length(Y)
plot(galton)
summary(m)
plot(galton)
fitted(m)
residuals(ㅡㅡ)
residuals(m)
residuals(model)
# R의 단순 선형회귀 모델 : Linear Model(LM)
model <- lm(Y ~ X)
residuals(model)
# R의 단순 선형회귀 모델 : Linear Model(LM)
model <- lm(Y ~ X)
# 현실 세계의 모델링
X = c(3, 6, 9, 12)
Y = c(3, 4, 5.5, 6.5)
# R의 단순 선형회귀 모델 : Linear Model(LM)
model <- lm(Y ~ X)
residuals(model)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
plot(m)
residuals(m)
deviance(m) / length(child)
deviance(m) / length(galton$child)
View(m)
View(m)
summary(m)                             # child 0.32565    0.02073   15.71   <2e-16 *** => p값이 0.05 이하이므로 유의함.
m <- lm(parent~child, data = galton)
# inch로 되어 있는 데이터를 cm로 바꾸는 것 어케 하는지 몰으겠다... ㅠㅠ 2.54 를 어디에 곱하나유? ㅠㅠ
m
m <- lm(parent~child, data = galton) * 2.54
m <- lm((parent~child)* 2.54, data = galton)
abline(m, col = "purple", lwd = 3)
plot(galton)
abline(m, col = "purple", lwd = 3)
coef(m)                                # 기울기 0.3256 y절편 46.1353
# par(mfrow = c(2, 2))
plot(m)
m <- lm(child~parent, data = galton)
m <- lm(child~parent, data = galton)
coef(m)                                # 기울기 0.3256 y절편 46.1353
summary(m)                             # child 0.32565    0.02073   15.71   <2e-16 *** => p값이 0.05 이하이므로 두 변수간의 상관관계가 유의함. 그러나 Adjusted R-squared(자료결정계수)는 0.2096로 추정한 모델 m의 자료 적합도는 낮다.
fitted(m)                              # 잔차분석용...? 굳이 왜하는건지 모르겠음.
deviance(m) / length(galton$child)     # 평균제곱오차
plot(galton)
abline(m, col = "purple", lwd = 3)     # galton 데이터 산점도 + 선형회귀모델 m 적용.
summary(m)
# par(mfrow = c(2, 2))
plot(m)
galton <- read.csv("http://www.randomservices.org/ramdom/data/Galton.html")
galton <- read.table("http://www.randomservices.org/ramdom/data/Galton.txt", header = T)
galton <- read.table("http://www.randomservices.org/ramdom/data/Galton.txt", sep = '.t', header = T)
galton <- read.table("http://www.randomservices.org/ramdom/data/Galton.txt", sep = '/t', header = T)
galton <- read.csv("http://www.math.uah.edu/stat/data/Galton.html", header = T, stringsAsFactors = FALSE)
galton <- read.table("http://www.randomservices.org/ramdom/data/Galton.txt", header = T, sep = '/t')
galton <- read.table("http://www.randomservices.org/ramdom/data/Galton.txt.", header = T, sep = '/')
galton <- read.table("http://www.randomservices.org/ramdom/data/Galton.txt", header = T, sep = '/t')
galton <- read.table("http://www.randomservices.org/ramdom/data/Galton.txt", header = T, sep = '/Temp/2020/HncDownload/Service.log')
galton <- read.table("http://www.randomservices.org/ramdom/data/Galton.txt", header = T)
galton <- read.table("Galton.txt", header=TRUE)
galton <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = '/t')
galton <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = '/Temp/')
galton <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = '/t')
galton <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = '/Temp/2020/HncDownload/Service.log')
galton <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = "")
galton
galton <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = "", header = T)
galton
m <- lm(child~parent, data = galton)
library(dplyr)
library(ggplot2)
g1 <- galton %>%
filter(gender == "M") %>%
group_by(Father, Mother) %>%
summarise(parent = mean(Fater+Mother))
g1 <- galton %>%
filter(Gender == "M") %>%
group_by(Father, Mother) %>%
summarise(parent = mean(Fater+Mother))
galton
galton <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = "", header = T)
galton
galton
galton_V
galton_v <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = "", header = T)
galton_v
head(galton_v)
g1 <- galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother) %>%
summarise(parent = mean(Fater+Mother))
g1 <- galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother) %>%
summarise(parent = mean(Father+Mother))
g1
g1 <- galton_v %>%
filter(Gender == "M")
galton_v %>%
filter(Gender == "M")
galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother)
galton_v %>%
filter(Gender == "M") %>%
summarise(parent = mean(Father+Mother))
galton_v %>%
filter(Gender == "M") %>%
group_by(Kids)
summarise(parent = mean(Father+Mother))
galton_v %>%
filter(Gender == "M") %>%
group_by(Kids)
galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids) %>%
summarise(parent = mean(Father+Mother))
galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids) %>%
summarise(parent = mean(Father+Mother))
galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids) %>%
summarise(parent = mean(Father, Mother))
galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids) %>%
summarise(parent = mean(c(Father, Mother)))
g1 <- galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids) %>%
summarise(parent = mean(c(Father, Mother)))
g1
g1 <- galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids, Gender) %>%
summarise(parent = mean(c(Father, Mother)))
g1
g1 <- galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids, Height) %>%
summarise(parent = mean(c(Father, Mother)))
g1
m <- lm(Height~parent, data = g1)
m
plot(g1)
g1 <- galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids, Height) %>%
summarise(parent = mean(c(Father, Mother))) %>%               # mutate 하고 select하는게 나았을듯/
g1
g1 <- galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids, Height) %>%
summarise(parent = mean(c(Father, Mother))) %>%
select(Height, parent)                               # mutate 하고 select하는게 나았을듯/
g1
g1 <- galton_v %>%
filter(Gender == "M") %>%
group_by(Father, Mother, Kids, Height) %>%
summarise(parent = (mean(c(Father, Mother)*2.54)))                       # mutate 하고 select하는게 나았을듯/
g1
?mutate
galton_v %>%
filter(gender == "M") %>%
mutate("Height(cm)" = 2.54 * Height)
galton_v %>%
filter(Gender == "M") %>%
mutate("Height(cm)" = 2.54 * Height)
galton_v %>%
filter(Gender == "M") %>%
mutate(("Height(cm)" = 2.54 * Height), mutate("parent(cm)" = 2.54 * ((Father+Mother)/2)))
galton_v %>%
filter(Gender == "M") %>%
mutate("Height(cm)" = 2.54 * Height) %>%
mutate("parent(cm)" = 2.54 * ((Father+Mother)/2))
galton_v %>%
filter(Gender == "M") %>%
mutate("Height(cm)" = 2.54 * Height) %>%
mutate("parent(cm)" = 2.54 * ((Father+Mother)/2)) %>%
select(Height(cm), parent(cm))
galton_v %>%
filter(Gender == "M") %>%
mutate("Height_cm" = 2.54 * Height) %>%
mutate("parent_cm" = 2.54 * ((Father+Mother)/2)) %>%
select(Height_cm, parent_cm)
g1 <- galton_v %>%
filter(Gender == "M") %>%
mutate("Height_cm" = 2.54 * Height) %>%
mutate("parent_cm" = 2.54 * ((Father+Mother)/2)) %>%
select(Height_cm, parent_cm)
g1
m <- lm(Height_cm~parent_cm, data = g1)
m
coef(m)                                # 기울기 0.3256 y절편 46.1353
summary(m)                             # child 0.32565    0.02073   15.71   <2e-16 *** => p값이 0.05 이하이므로 두 변수간의 상관관계가 유의함. 그러나 Adjusted R-squared(자료결정계수)는 0.2096로 추정한 모델 m의 자료 적합도는 낮다.
g1 <- galton_v %>%
filter(Gender == "M") %>%
mutate("Height_cm" = 2.54 * Height) %>%
mutate("Father_cm" = 2.54 * Father) %>%
select(Height_cm, parent_cm)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
galton_v <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = "", header = T)
galton_v
g1 <- galton_v %>%
filter(Gender == "M") %>%
mutate("Height_cm" = 2.54 * Height) %>%
mutate("Father_cm" = 2.54 * Father) %>%
select(Height_cm, parent_cm)
g1 <- galton_v %>%
filter(Gender == "M") %>%
mutate("Height_cm" = 2.54 * Height) %>%
mutate("Father_cm" = 2.54 * Father) %>%
select(Height_cm, Father_cm)
g1
m <- lm(Height_cm~Father_cm, data = g1)
coef(m)                                # 기울기랑 y절편. 즉 회귀식 y = 49.96x + 0.74
summary(m)                             # parent_cm    0.74425    0.06197  12.011  < 2e-16 *** => p값이 0.05 이하이므로 두 변수간의 상관관계가 유의함. 그러나 Adjusted R-squared(자료결정계수)는 0.2096로 추정한 모델 m의 자료 적합도는 낮다.
plot(m)
plot(g1)
abline(m, col = "purple", lwd = 3)
plot(m)
par(mfrow = c(2, 2))
plot(m)
head(g1)
par(mfrow = c(2, 2))
plot(m)
plot(g1)
par(mfrow = c(1))
par(mfrow = 1)
par(mfrow = c(1,1))
head(g1)
plot(g1)
par(mfrow = c(2, 2))
plot(m)
par(mfrow = c(1,1))
plot(g1)
plot(g1)
abline(m, col = "purple", lwd = 3)
plot(g1) + coord_flip
g1 <- galton_v %>%
filter(Gender == "M") %>%
mutate("Height_cm" = 2.54 * Height) %>%
mutate("Father_cm" = 2.54 * Father) %>%
select(Father_cm, Height_cm)
head(g1)
m <- lm(Height_cm~Father_cm, data = g1)
plot(g1) + coord_flip
abline(m, col = "purple", lwd = 3)
coef(m)                                # 기울기랑 y절편. 즉 회귀식 y =  97.1776370x + 0.4477479
summary(m)                             # Father_cm    0.44775    0.04894    9.15   <2e-16 *** => p값이 0.05 이하이므로 두 변수간의 상관관계가 유의함. 그러나 Adjusted R-squared:  0.1513로 추정한 모델 m의 자료 적합도는 낮다.
fitted(m)                              # 잔차분석용...? 굳이 왜하는건지 모르겠음.
plot(g1) + coord_flip
plot(g1)
abline(m, col = "purple", lwd = 3)
plot(g1)
plot(g1)
abline(m, col = "purple", lwd = 3)
coef(m)                                # 기울기랑 y절편. 즉 회귀식 y =  97.1776370x + 0.4477479
summary(m)                             # Father_cm    0.44775    0.04894    9.15   <2e-16 *** => p값이 0.05 이하이므로 두 변수간의 상관관계가 유의함. 그러나 Adjusted R-squared:  0.1513로 추정한 모델 m의 자료 적합도는 낮다.
par(mfrow = c(2, 2))
plot(m)
par(mfrow = c(1,1))
deviance(m) / length(g1$Father_cm)
deviance(m) / length(g1$Height_cm)
colors <- c('red', 'purple', 'dark orange', 'blue')
for (i in 1:4) {
m <- lm(Height_cm~poly(Father_cm, i), data = g1)
assign(paste('m', i, sep = '.'), m)
y <- predict(m, data.frame(Father_cm = x))
lines(x, y, col = colors[i], lwd = 2)
}
colors <- c('red', 'purple', 'dark orange', 'blue')
x <- seq(150, 200, length.out = 501)
for (i in 1:4) {
m <- lm(Height_cm~poly(Father_cm, i), data = g1)
assign(paste('m', i, sep = '.'), m)
y <- predict(m, data.frame(Father_cm = x))
lines(x, y, col = colors[i], lwd = 2)
}
par(mfrow = c(2, 2))
plot(m)
par(mfrow = c(1,1))
colors <- c('red', 'purple', 'dark orange', 'blue')
x <- seq(150, 200, length.out = 501)
for (i in 1:4) {
m <- lm(Height_cm~poly(Father_cm, i), data = g1)
assign(paste('m', i, sep = '.'), m)
y <- predict(m, data.frame(Father_cm = x))
lines(x, y, col = colors[i], lwd = 2)
}
anova(m.1, m.2, m.3, m.4)
summary(m.4)
summary(m.1)
summary(m.4)
summary(m.1)
```{r}
g1 <- galton_v %>%
filter(Gender == "M") %>%
mutate("Height_cm" = 2.54 * Height, "Father_cm" = 2.54 * Father) %>%
select(Father_cm, Height_cm)
galton_v <- read.table("http://www.randomservices.org/random/data/Galton.txt", sep = "", header = T)
galton_v
g1 <- galton_v %>%
filter(Gender == "M") %>%
mutate("Height_cm" = 2.54 * Height, "Father_cm" = 2.54 * Father) %>%
select(Father_cm, Height_cm)
head(g1)
g1 <- galton_v %>%
filter(Gender == "M") %>%
mutate("Height_cm" = 2.54 * Height, "Father_cm" = 2.54 * Father) %>%
select(Father_cm, Height_cm)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
colors <- c('red', 'purple', 'dark orange', 'blue')
x <- seq(150, 200, length.out = 501)
for (i in 1:4) {
m <- lm(Height_cm~poly(Father_cm, i), data = g1)
assign(paste('m', i, sep = '.'), m)
y <- predict(m, data.frame(Father_cm = x))
lines(x, y, col = colors[i], lwd = 2)
}
anova(m.1, m.2, m.3, m.4)
summary(m.4)
summary(m.1)
colors <- c('red', 'purple', 'dark orange', 'blue')
x <- seq(150, 200, length.out = 501)
for (i in 1:4) {
m <- lm(Height_cm~poly(Father_cm, i), data = g1)
assign(paste('m', i, sep = '.'), m)
y <- predict(m, data.frame(Father_cm = x))
lines(x, y, col = colors[i], lwd = 2)
}
anova(m.1, m.2, m.3, m.4)
summary(m.4)
summary(m.1)
anova(m.1, m.2, m.3, m.4)
colors <- c('red', 'purple', 'dark orange', 'blue')
x <- seq(150, 200, length.out = 501)
for (i in 1:4) {
m <- lm(Height_cm~poly(Father_cm, i), data = g1)
assign(paste('m', i, sep = '.'), m)
y <- predict(m, data.frame(Father_cm = x))
lines(x, y, col = colors[i], lwd = 2)
}
anova(m.1, m.2, m.3, m.4)
x <- seq(4, 25, length.out = 211)
colors <- c('red', 'purple', 'dark orange', 'blue')
plot(cars)
for (i in 1:4) {
m <- lm(dist~poly(speed, i), data = cars)
assign(paste('m', i, sep = '.'), m)
y <- predict(m, data.frame(speed = x))
lines(x, y, col = colors[i], lwd = 2)
}
summary(m.4)
x <- seq(4, 25, length.out = 211)
colors <- c('red', 'purple', 'dark orange', 'blue')
plot(cars)
for (i in 1:4) {
m <- lm(dist~poly(speed, i), data = cars)
assign(paste('m', i, sep = '.'), m)
y <- predict(m, data.frame(speed = x))
lines(x, y, col = colors[i], lwd = 2)
}
colors <- c('red', 'purple', 'dark orange', 'blue')
plot(g1)
x <- seq(150, 200, length.out = 501)
for (i in 1:4) {
m <- lm(Height_cm~poly(Father_cm, i), data = g1)
assign(paste('m', i, sep = '.'), m)
y <- predict(m, data.frame(Father_cm = x))
lines(x, y, col = colors[i], lwd = 2)
}
anova(m.1, m.2, m.3, m.4)
# Women Data
women
plot(women)
m <- lm(weight~height, data = women)
abline(m, col = "red", lwd = 1)
abline(m, col = "red", lwd = 2)
summary(m)
m2 <- lm(weight ~ poly (height, 2), data = women)
m2
plot(m2)
x <- seq(58, 72, 300)
y <- predict(m2, data.frame(height = x))
plot(m2)
plot(x, y, col = "blue", lwd = 2)
lines(x, y, col = "blue", lwd = 2)
m2 <- lm(weight ~ poly (height, 2), data = women)
x <- seq(58, 72, length.out = 300)
y <- predict(m2, data.frame(height = x))
lines(x, y, col = "blue", lwd = 2)
summary(m2)
m2 <- lm(weight ~ poly(height, 2), data = women)
x <- seq(58, 72, length.out = 300)
y <- predict(m2, data.frame(height = x))
lines(x, y, col = "blue", lwd = 2)
m2 <- lm(weight ~ poly(height, 2), data = women)
x <- seq(58, 72, length.out = 300)
y <- predict(m2, data.frame(height = x))
lines(x, y, col = "blue", lwd = 2)
m2 <- lm(weight ~ poly(height, 2), data = women)
x <- seq(58, 72, length.out = 300)
y <- predict(m2, data.frame(height = x))
lines(x, y, col = "blue", lwd = 2)
m2 <- lm(weight ~ poly(height, 2), data = women)
x <- seq(50, 72, length.out = 300)
y <- predict(m2, data.frame(height = x))
lines(x, y, col = "blue", lwd = 2)
lines(x, y)
y <- predict(m2, data.frame(height = x))
x <- seq(50, 72, length.out = 300)
m2 <- lm(weight ~ poly(height, 2), data = women)
m2 <- lm(weight ~ poly(height, 2), data = women)
x <- seq(50, 72, length.out = 300)
y <- predict(m2, data.frame(height = x))
lines(x, y, col = "blue", lwd = 2)
women
plot(women)
m <- lm(weight~height, data = women)
abline(m, col = "red", lwd = 2)
summary(m)
m2 <- lm(weight ~ poly(height, 2), data = women)
x <- seq(50, 72, length.out = 300)
y <- predict(m2, data.frame(height = x))
lines(x, y, col = "blue", lwd = 2)
summary(m2)
m2 <- lm(weight ~ poly(height, 2), data = women)
x <- seq(58, 72, length.out = 300)
y <- predict(m2, data.frame(height = x))
lines(x, y, col = "blue", lwd = 2)
summary(m2)
